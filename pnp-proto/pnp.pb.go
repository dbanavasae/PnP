// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pnp.proto

/*
Package pnp is a generated protocol buffer package.

It is generated from these files:
	pnp.proto

It has these top-level messages:
	ClientInfo
	CommonClientInfo
	ClientPkgMsg
	ClientPlatformMsg
	InstructionPayload
	CommonServerResponse
	Chunk
	ServerPkgResponse
	ServerPlatformResponse
	Query
	ClientRequestMsg
*/
package pnp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/Learning/PnP/common/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClientPkgMsgType int32

const (
	ClientPkgMsgType_PKG_NOT_INSTALLED                     ClientPkgMsgType = 0
	ClientPkgMsgType_PKG_INSTALLED                         ClientPkgMsgType = 1
	ClientPkgMsgType_PKG_VERSION_CHANGED                   ClientPkgMsgType = 2
	ClientPkgMsgType_PKG_VERSION_NO_CHANGE                 ClientPkgMsgType = 3
	ClientPkgMsgType_PKG_UNINSTALL_SUCCESS                 ClientPkgMsgType = 4
	ClientPkgMsgType_PKG_UNINSTALL_FAILED                  ClientPkgMsgType = 5
	ClientPkgMsgType_PKG_INSTALL_SUCCESS                   ClientPkgMsgType = 6
	ClientPkgMsgType_PKG_INSTALL_FAILED                    ClientPkgMsgType = 7
	ClientPkgMsgType_PKG_INIT                              ClientPkgMsgType = 8
	ClientPkgMsgType_PKG_GET_FILE                          ClientPkgMsgType = 9
	ClientPkgMsgType_PKG_DOWNLOAD_INSTRUCTION_FILE_SUCCESS ClientPkgMsgType = 10
	ClientPkgMsgType_PKG_DOWNLOAD_INSTRUCTION_FILE_FAILED  ClientPkgMsgType = 11
)

var ClientPkgMsgType_name = map[int32]string{
	0:  "PKG_NOT_INSTALLED",
	1:  "PKG_INSTALLED",
	2:  "PKG_VERSION_CHANGED",
	3:  "PKG_VERSION_NO_CHANGE",
	4:  "PKG_UNINSTALL_SUCCESS",
	5:  "PKG_UNINSTALL_FAILED",
	6:  "PKG_INSTALL_SUCCESS",
	7:  "PKG_INSTALL_FAILED",
	8:  "PKG_INIT",
	9:  "PKG_GET_FILE",
	10: "PKG_DOWNLOAD_INSTRUCTION_FILE_SUCCESS",
	11: "PKG_DOWNLOAD_INSTRUCTION_FILE_FAILED",
}
var ClientPkgMsgType_value = map[string]int32{
	"PKG_NOT_INSTALLED":                     0,
	"PKG_INSTALLED":                         1,
	"PKG_VERSION_CHANGED":                   2,
	"PKG_VERSION_NO_CHANGE":                 3,
	"PKG_UNINSTALL_SUCCESS":                 4,
	"PKG_UNINSTALL_FAILED":                  5,
	"PKG_INSTALL_SUCCESS":                   6,
	"PKG_INSTALL_FAILED":                    7,
	"PKG_INIT":                              8,
	"PKG_GET_FILE":                          9,
	"PKG_DOWNLOAD_INSTRUCTION_FILE_SUCCESS": 10,
	"PKG_DOWNLOAD_INSTRUCTION_FILE_FAILED":  11,
}

func (x ClientPkgMsgType) String() string {
	return proto.EnumName(ClientPkgMsgType_name, int32(x))
}
func (ClientPkgMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ClientPlatformMsgType int32

const (
	ClientPlatformMsgType_PLATFORM_ALREADY_INSTALLED         ClientPlatformMsgType = 0
	ClientPlatformMsgType_PLATFORM_NOT_INSTALLED             ClientPlatformMsgType = 1
	ClientPlatformMsgType_PLATFORM_ARTIFACT_DOWNLOAD_SUCCESS ClientPlatformMsgType = 2
	ClientPlatformMsgType_PLATFORM_ARTIFACT_DOWNLOAD_FAILED  ClientPlatformMsgType = 3
	ClientPlatformMsgType_PLATFORM_DEPLOYMENT_SUCCESS        ClientPlatformMsgType = 4
	ClientPlatformMsgType_PLATFORM_DEPLOYMENT_FAILED         ClientPlatformMsgType = 5
	ClientPlatformMsgType_PLATFORM_INIT                      ClientPlatformMsgType = 6
)

var ClientPlatformMsgType_name = map[int32]string{
	0: "PLATFORM_ALREADY_INSTALLED",
	1: "PLATFORM_NOT_INSTALLED",
	2: "PLATFORM_ARTIFACT_DOWNLOAD_SUCCESS",
	3: "PLATFORM_ARTIFACT_DOWNLOAD_FAILED",
	4: "PLATFORM_DEPLOYMENT_SUCCESS",
	5: "PLATFORM_DEPLOYMENT_FAILED",
	6: "PLATFORM_INIT",
}
var ClientPlatformMsgType_value = map[string]int32{
	"PLATFORM_ALREADY_INSTALLED":         0,
	"PLATFORM_NOT_INSTALLED":             1,
	"PLATFORM_ARTIFACT_DOWNLOAD_SUCCESS": 2,
	"PLATFORM_ARTIFACT_DOWNLOAD_FAILED":  3,
	"PLATFORM_DEPLOYMENT_SUCCESS":        4,
	"PLATFORM_DEPLOYMENT_FAILED":         5,
	"PLATFORM_INIT":                      6,
}

func (x ClientPlatformMsgType) String() string {
	return proto.EnumName(ClientPlatformMsgType_name, int32(x))
}
func (ClientPlatformMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CmdType int32

const (
	CmdType_RUN        CmdType = 0
	CmdType_CONFIG     CmdType = 1
	CmdType_CLOSE_CONN CmdType = 2
	CmdType_INFO       CmdType = 3
)

var CmdType_name = map[int32]string{
	0: "RUN",
	1: "CONFIG",
	2: "CLOSE_CONN",
	3: "INFO",
}
var CmdType_value = map[string]int32{
	"RUN":        0,
	"CONFIG":     1,
	"CLOSE_CONN": 2,
	"INFO":       3,
}

func (x CmdType) String() string {
	return proto.EnumName(CmdType_name, int32(x))
}
func (CmdType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PkgOperType int32

const (
	PkgOperType_IS_PKG_INSTALLED      PkgOperType = 0
	PkgOperType_INSTALL_PKG           PkgOperType = 1
	PkgOperType_INSTALL_PKG_FROM_FILE PkgOperType = 2
	PkgOperType_IS_PKG_OUTDATED       PkgOperType = 3
	PkgOperType_UNINSTALL_PKG         PkgOperType = 4
	PkgOperType_GET_NEXT_PKG          PkgOperType = 5
)

var PkgOperType_name = map[int32]string{
	0: "IS_PKG_INSTALLED",
	1: "INSTALL_PKG",
	2: "INSTALL_PKG_FROM_FILE",
	3: "IS_PKG_OUTDATED",
	4: "UNINSTALL_PKG",
	5: "GET_NEXT_PKG",
}
var PkgOperType_value = map[string]int32{
	"IS_PKG_INSTALLED":      0,
	"INSTALL_PKG":           1,
	"INSTALL_PKG_FROM_FILE": 2,
	"IS_PKG_OUTDATED":       3,
	"UNINSTALL_PKG":         4,
	"GET_NEXT_PKG":          5,
}

func (x PkgOperType) String() string {
	return proto.EnumName(PkgOperType_name, int32(x))
}
func (PkgOperType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SDPOperType int32

const (
	SDPOperType_IS_PLATFORM_INSTALLED      SDPOperType = 0
	SDPOperType_DOWNLOAD_PLATFORM_ARTIFACT SDPOperType = 1
	SDPOperType_DEPLOY_PLATFORM            SDPOperType = 2
)

var SDPOperType_name = map[int32]string{
	0: "IS_PLATFORM_INSTALLED",
	1: "DOWNLOAD_PLATFORM_ARTIFACT",
	2: "DEPLOY_PLATFORM",
}
var SDPOperType_value = map[string]int32{
	"IS_PLATFORM_INSTALLED":      0,
	"DOWNLOAD_PLATFORM_ARTIFACT": 1,
	"DEPLOY_PLATFORM":            2,
}

func (x SDPOperType) String() string {
	return proto.EnumName(SDPOperType_name, int32(x))
}
func (SDPOperType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ClientInfo struct {
	OsType   string `protobuf:"bytes,1,opt,name=osType" json:"osType,omitempty"`
	OsFlavor string `protobuf:"bytes,2,opt,name=osFlavor" json:"osFlavor,omitempty"`
	ArchType string `protobuf:"bytes,3,opt,name=archType" json:"archType,omitempty"`
	ClientId string `protobuf:"bytes,4,opt,name=clientId" json:"clientId,omitempty"`
}

func (m *ClientInfo) Reset()                    { *m = ClientInfo{} }
func (m *ClientInfo) String() string            { return proto.CompactTextString(m) }
func (*ClientInfo) ProtoMessage()               {}
func (*ClientInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClientInfo) GetOsType() string {
	if m != nil {
		return m.OsType
	}
	return ""
}

func (m *ClientInfo) GetOsFlavor() string {
	if m != nil {
		return m.OsFlavor
	}
	return ""
}

func (m *ClientInfo) GetArchType() string {
	if m != nil {
		return m.ArchType
	}
	return ""
}

func (m *ClientInfo) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type CommonClientInfo struct {
	RequestHeader *common.RequestHeader `protobuf:"bytes,1,opt,name=requestHeader" json:"requestHeader,omitempty"`
	ClientInfo    *ClientInfo           `protobuf:"bytes,2,opt,name=clientInfo" json:"clientInfo,omitempty"`
}

func (m *CommonClientInfo) Reset()                    { *m = CommonClientInfo{} }
func (m *CommonClientInfo) String() string            { return proto.CompactTextString(m) }
func (*CommonClientInfo) ProtoMessage()               {}
func (*CommonClientInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CommonClientInfo) GetRequestHeader() *common.RequestHeader {
	if m != nil {
		return m.RequestHeader
	}
	return nil
}

func (m *CommonClientInfo) GetClientInfo() *ClientInfo {
	if m != nil {
		return m.ClientInfo
	}
	return nil
}

type ClientPkgMsg struct {
	CommonClientInfo *CommonClientInfo `protobuf:"bytes,1,opt,name=commonClientInfo" json:"commonClientInfo,omitempty"`
	ClientPkgMsgType ClientPkgMsgType  `protobuf:"varint,2,opt,name=clientPkgMsgType,enum=pnp.ClientPkgMsgType" json:"clientPkgMsgType,omitempty"`
}

func (m *ClientPkgMsg) Reset()                    { *m = ClientPkgMsg{} }
func (m *ClientPkgMsg) String() string            { return proto.CompactTextString(m) }
func (*ClientPkgMsg) ProtoMessage()               {}
func (*ClientPkgMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClientPkgMsg) GetCommonClientInfo() *CommonClientInfo {
	if m != nil {
		return m.CommonClientInfo
	}
	return nil
}

func (m *ClientPkgMsg) GetClientPkgMsgType() ClientPkgMsgType {
	if m != nil {
		return m.ClientPkgMsgType
	}
	return ClientPkgMsgType_PKG_NOT_INSTALLED
}

type ClientPlatformMsg struct {
	CommonClientInfo      *CommonClientInfo     `protobuf:"bytes,1,opt,name=commonClientInfo" json:"commonClientInfo,omitempty"`
	ClientPlatformMsgType ClientPlatformMsgType `protobuf:"varint,2,opt,name=ClientPlatformMsgType,enum=pnp.ClientPlatformMsgType" json:"ClientPlatformMsgType,omitempty"`
}

func (m *ClientPlatformMsg) Reset()                    { *m = ClientPlatformMsg{} }
func (m *ClientPlatformMsg) String() string            { return proto.CompactTextString(m) }
func (*ClientPlatformMsg) ProtoMessage()               {}
func (*ClientPlatformMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClientPlatformMsg) GetCommonClientInfo() *CommonClientInfo {
	if m != nil {
		return m.CommonClientInfo
	}
	return nil
}

func (m *ClientPlatformMsg) GetClientPlatformMsgType() ClientPlatformMsgType {
	if m != nil {
		return m.ClientPlatformMsgType
	}
	return ClientPlatformMsgType_PLATFORM_ALREADY_INSTALLED
}

type InstructionPayload struct {
	Cmd []string `protobuf:"bytes,1,rep,name=cmd" json:"cmd,omitempty"`
}

func (m *InstructionPayload) Reset()                    { *m = InstructionPayload{} }
func (m *InstructionPayload) String() string            { return proto.CompactTextString(m) }
func (*InstructionPayload) ProtoMessage()               {}
func (*InstructionPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *InstructionPayload) GetCmd() []string {
	if m != nil {
		return m.Cmd
	}
	return nil
}

type CommonServerResponse struct {
	ResponseHeader *common.ResponseHeader `protobuf:"bytes,1,opt,name=responseHeader" json:"responseHeader,omitempty"`
	CmdType        CmdType                `protobuf:"varint,2,opt,name=cmdType,enum=pnp.CmdType" json:"cmdType,omitempty"`
}

func (m *CommonServerResponse) Reset()                    { *m = CommonServerResponse{} }
func (m *CommonServerResponse) String() string            { return proto.CompactTextString(m) }
func (*CommonServerResponse) ProtoMessage()               {}
func (*CommonServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CommonServerResponse) GetResponseHeader() *common.ResponseHeader {
	if m != nil {
		return m.ResponseHeader
	}
	return nil
}

func (m *CommonServerResponse) GetCmdType() CmdType {
	if m != nil {
		return m.CmdType
	}
	return CmdType_RUN
}

type Chunk struct {
	FileChunk []byte `protobuf:"bytes,1,opt,name=fileChunk,proto3" json:"fileChunk,omitempty"`
}

func (m *Chunk) Reset()                    { *m = Chunk{} }
func (m *Chunk) String() string            { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()               {}
func (*Chunk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Chunk) GetFileChunk() []byte {
	if m != nil {
		return m.FileChunk
	}
	return nil
}

type ServerPkgResponse struct {
	CommonServerResponse *CommonServerResponse `protobuf:"bytes,1,opt,name=commonServerResponse" json:"commonServerResponse,omitempty"`
	PkgOperType          PkgOperType           `protobuf:"varint,2,opt,name=pkgOperType,enum=pnp.PkgOperType" json:"pkgOperType,omitempty"`
	InstructionPayload   *InstructionPayload   `protobuf:"bytes,3,opt,name=instructionPayload" json:"instructionPayload,omitempty"`
	Chunk                *Chunk                `protobuf:"bytes,4,opt,name=chunk" json:"chunk,omitempty"`
}

func (m *ServerPkgResponse) Reset()                    { *m = ServerPkgResponse{} }
func (m *ServerPkgResponse) String() string            { return proto.CompactTextString(m) }
func (*ServerPkgResponse) ProtoMessage()               {}
func (*ServerPkgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ServerPkgResponse) GetCommonServerResponse() *CommonServerResponse {
	if m != nil {
		return m.CommonServerResponse
	}
	return nil
}

func (m *ServerPkgResponse) GetPkgOperType() PkgOperType {
	if m != nil {
		return m.PkgOperType
	}
	return PkgOperType_IS_PKG_INSTALLED
}

func (m *ServerPkgResponse) GetInstructionPayload() *InstructionPayload {
	if m != nil {
		return m.InstructionPayload
	}
	return nil
}

func (m *ServerPkgResponse) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type ServerPlatformResponse struct {
	CommonServerResponse *CommonServerResponse `protobuf:"bytes,1,opt,name=commonServerResponse" json:"commonServerResponse,omitempty"`
	SdpOperType          SDPOperType           `protobuf:"varint,2,opt,name=sdpOperType,enum=pnp.SDPOperType" json:"sdpOperType,omitempty"`
	InstructionPayload   *InstructionPayload   `protobuf:"bytes,3,opt,name=instructionPayload" json:"instructionPayload,omitempty"`
}

func (m *ServerPlatformResponse) Reset()                    { *m = ServerPlatformResponse{} }
func (m *ServerPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*ServerPlatformResponse) ProtoMessage()               {}
func (*ServerPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ServerPlatformResponse) GetCommonServerResponse() *CommonServerResponse {
	if m != nil {
		return m.CommonServerResponse
	}
	return nil
}

func (m *ServerPlatformResponse) GetSdpOperType() SDPOperType {
	if m != nil {
		return m.SdpOperType
	}
	return SDPOperType_IS_PLATFORM_INSTALLED
}

func (m *ServerPlatformResponse) GetInstructionPayload() *InstructionPayload {
	if m != nil {
		return m.InstructionPayload
	}
	return nil
}

type Query struct {
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type ClientRequestMsg struct {
	RequestHeader *common.RequestHeader `protobuf:"bytes,1,opt,name=RequestHeader" json:"RequestHeader,omitempty"`
	QueryData     *Query                `protobuf:"bytes,2,opt,name=QueryData" json:"QueryData,omitempty"`
}

func (m *ClientRequestMsg) Reset()                    { *m = ClientRequestMsg{} }
func (m *ClientRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*ClientRequestMsg) ProtoMessage()               {}
func (*ClientRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ClientRequestMsg) GetRequestHeader() *common.RequestHeader {
	if m != nil {
		return m.RequestHeader
	}
	return nil
}

func (m *ClientRequestMsg) GetQueryData() *Query {
	if m != nil {
		return m.QueryData
	}
	return nil
}

func init() {
	proto.RegisterType((*ClientInfo)(nil), "pnp.ClientInfo")
	proto.RegisterType((*CommonClientInfo)(nil), "pnp.CommonClientInfo")
	proto.RegisterType((*ClientPkgMsg)(nil), "pnp.ClientPkgMsg")
	proto.RegisterType((*ClientPlatformMsg)(nil), "pnp.ClientPlatformMsg")
	proto.RegisterType((*InstructionPayload)(nil), "pnp.InstructionPayload")
	proto.RegisterType((*CommonServerResponse)(nil), "pnp.CommonServerResponse")
	proto.RegisterType((*Chunk)(nil), "pnp.Chunk")
	proto.RegisterType((*ServerPkgResponse)(nil), "pnp.ServerPkgResponse")
	proto.RegisterType((*ServerPlatformResponse)(nil), "pnp.ServerPlatformResponse")
	proto.RegisterType((*Query)(nil), "pnp.Query")
	proto.RegisterType((*ClientRequestMsg)(nil), "pnp.ClientRequestMsg")
	proto.RegisterEnum("pnp.ClientPkgMsgType", ClientPkgMsgType_name, ClientPkgMsgType_value)
	proto.RegisterEnum("pnp.ClientPlatformMsgType", ClientPlatformMsgType_name, ClientPlatformMsgType_value)
	proto.RegisterEnum("pnp.CmdType", CmdType_name, CmdType_value)
	proto.RegisterEnum("pnp.PkgOperType", PkgOperType_name, PkgOperType_value)
	proto.RegisterEnum("pnp.SDPOperType", SDPOperType_name, SDPOperType_value)
}

func init() { proto.RegisterFile("pnp.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 997 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x18, 0xad, 0x93, 0xfe, 0xe5, 0x4b, 0x7f, 0x9c, 0x6f, 0xdb, 0x6c, 0x9b, 0x45, 0x4b, 0xb1, 0x68,
	0x55, 0x7a, 0xd1, 0x42, 0xb9, 0x41, 0x5a, 0x69, 0x25, 0xcb, 0x76, 0xb2, 0xd6, 0xa6, 0xb6, 0x19,
	0xbb, 0xc0, 0x5e, 0x20, 0xcb, 0xeb, 0xb8, 0x69, 0x94, 0xc4, 0x36, 0x4e, 0xb2, 0x22, 0x37, 0x08,
	0x2e, 0xb9, 0x47, 0x3c, 0x03, 0xef, 0xc2, 0x6b, 0xf0, 0x0c, 0x5c, 0xa3, 0x19, 0xff, 0x4d, 0x7e,
	0x58, 0x09, 0x69, 0xb9, 0xcb, 0x7c, 0xe7, 0x7c, 0x67, 0xce, 0x9c, 0x19, 0xcf, 0x04, 0x6a, 0x71,
	0x18, 0x5f, 0xc7, 0x49, 0x34, 0x8d, 0xb0, 0x1a, 0x87, 0x71, 0xeb, 0x8b, 0xfe, 0x60, 0xfa, 0x38,
	0x7b, 0x7b, 0xed, 0x47, 0xe3, 0x9b, 0x6e, 0xe0, 0x25, 0xe1, 0x20, 0xec, 0xdf, 0x58, 0xa1, 0x75,
	0xe3, 0x47, 0xe3, 0x71, 0x14, 0xde, 0x30, 0x6a, 0x36, 0x48, 0xfb, 0xa4, 0x1f, 0x01, 0x94, 0xd1,
	0x20, 0x08, 0xa7, 0x7a, 0xf8, 0x10, 0x61, 0x13, 0xb6, 0xa3, 0x89, 0x33, 0x8f, 0x83, 0x13, 0xe1,
	0x4c, 0xb8, 0xac, 0x91, 0x6c, 0x84, 0x2d, 0xd8, 0x8d, 0x26, 0xed, 0x91, 0xf7, 0x2e, 0x4a, 0x4e,
	0x2a, 0x0c, 0x29, 0xc6, 0x14, 0xf3, 0x12, 0xff, 0x91, 0x75, 0x55, 0x53, 0x2c, 0x1f, 0x53, 0xcc,
	0x4f, 0xd5, 0x7b, 0x27, 0x9b, 0x29, 0x96, 0x8f, 0xa5, 0x9f, 0x05, 0x10, 0x15, 0x66, 0x85, 0x33,
	0xf0, 0x02, 0xf6, 0x93, 0xe0, 0x87, 0x59, 0x30, 0x99, 0xbe, 0x0a, 0xbc, 0x5e, 0x90, 0x30, 0x1f,
	0xf5, 0xdb, 0xe3, 0xeb, 0xcc, 0x34, 0xe1, 0x41, 0xb2, 0xc8, 0xc5, 0x1b, 0x00, 0xbf, 0x90, 0x62,
	0x3e, 0xeb, 0xb7, 0x87, 0xd7, 0x34, 0xa3, 0x72, 0x06, 0xc2, 0x51, 0xa4, 0xdf, 0x04, 0xd8, 0x4b,
	0x21, 0x6b, 0xd8, 0xbf, 0x9b, 0xf4, 0x51, 0x06, 0xd1, 0x5f, 0xb2, 0x54, 0x38, 0x60, 0x3a, 0x4b,
	0x20, 0x59, 0xa1, 0x33, 0x09, 0x4e, 0x92, 0xc5, 0x42, 0xad, 0x1c, 0xe4, 0x12, 0x4b, 0x20, 0x59,
	0xa1, 0x4b, 0x7f, 0x08, 0xd0, 0xc8, 0x68, 0x23, 0x6f, 0xfa, 0x10, 0x25, 0xe3, 0x0f, 0xe4, 0xcd,
	0x82, 0xe3, 0x15, 0x5d, 0xce, 0x60, 0x8b, 0x37, 0xb8, 0xc8, 0x20, 0xeb, 0x1b, 0xa5, 0x0b, 0x40,
	0x3d, 0x9c, 0x4c, 0x93, 0x99, 0x3f, 0x1d, 0x44, 0xa1, 0xe5, 0xcd, 0x47, 0x91, 0xd7, 0x43, 0x11,
	0xaa, 0xfe, 0xb8, 0x77, 0x22, 0x9c, 0x55, 0x2f, 0x6b, 0x84, 0xfe, 0x94, 0x7e, 0x82, 0xa3, 0xd4,
	0x9f, 0x1d, 0x24, 0xef, 0x82, 0x84, 0x04, 0x93, 0x38, 0x0a, 0x27, 0x01, 0xbe, 0x84, 0x83, 0x24,
	0xfb, 0xbd, 0xb0, 0xe1, 0xcd, 0x72, 0xc3, 0x79, 0x94, 0x2c, 0xb1, 0xf1, 0x02, 0x76, 0xfc, 0x71,
	0x8f, 0x5b, 0xc3, 0x5e, 0xba, 0x86, 0xb4, 0x46, 0x72, 0x50, 0x3a, 0x87, 0x2d, 0xe5, 0x71, 0x16,
	0x0e, 0xf1, 0x23, 0xa8, 0x3d, 0x0c, 0x46, 0x01, 0x1b, 0xb0, 0xb9, 0xf6, 0x48, 0x59, 0x90, 0x7e,
	0xa9, 0x40, 0x23, 0x75, 0x68, 0x0d, 0xfb, 0x85, 0xc9, 0x3b, 0x38, 0xf2, 0xd7, 0x98, 0xcf, 0xac,
	0x9e, 0x72, 0xe9, 0x2f, 0x12, 0xc8, 0xda, 0x36, 0xbc, 0x85, 0x7a, 0x3c, 0xec, 0x9b, 0x71, 0x90,
	0x70, 0xbe, 0x45, 0xa6, 0x62, 0x95, 0x75, 0xc2, 0x93, 0xb0, 0x03, 0x38, 0x58, 0xc9, 0x99, 0x7d,
	0x6e, 0xf5, 0xdb, 0xa7, 0xac, 0x75, 0x75, 0x1b, 0xc8, 0x9a, 0x16, 0x3c, 0x83, 0x2d, 0x9f, 0xad,
	0x7d, 0x93, 0xf5, 0x42, 0x6a, 0x9e, 0x56, 0x48, 0x0a, 0x48, 0x7f, 0x09, 0xd0, 0xcc, 0x32, 0xc8,
	0x36, 0xfb, 0x7f, 0x0c, 0x62, 0xd2, 0x8b, 0xd7, 0x06, 0x61, 0xab, 0x56, 0x19, 0x04, 0x47, 0xfa,
	0x60, 0x41, 0x48, 0x3b, 0xb0, 0xf5, 0xf5, 0x2c, 0x48, 0xe6, 0xd2, 0x1c, 0xc4, 0xf4, 0x6c, 0x67,
	0x77, 0x0b, 0xfd, 0xd6, 0x5e, 0xc0, 0x3e, 0xf9, 0x0f, 0xd7, 0xd0, 0xc2, 0x10, 0x2f, 0xa1, 0xc6,
	0x94, 0x55, 0x6f, 0xea, 0x65, 0xb7, 0x50, 0x1a, 0x33, 0xab, 0x92, 0x12, 0xbc, 0xfa, 0xb3, 0x92,
	0xcf, 0x5d, 0x7e, 0xfd, 0x78, 0x0c, 0x0d, 0xeb, 0x75, 0xc7, 0x35, 0x4c, 0xc7, 0xd5, 0x0d, 0xdb,
	0x91, 0xbb, 0x5d, 0x4d, 0x15, 0x37, 0xb0, 0x01, 0xfb, 0xb4, 0x5c, 0x96, 0x04, 0x7c, 0x0a, 0x4f,
	0x68, 0xe9, 0x1b, 0x8d, 0xd8, 0xba, 0x69, 0xb8, 0xca, 0x2b, 0xd9, 0xe8, 0x68, 0xaa, 0x58, 0xc1,
	0x53, 0x38, 0xe6, 0x01, 0xc3, 0xcc, 0x30, 0xb1, 0x9a, 0x43, 0xf7, 0x46, 0x26, 0xe4, 0xda, 0xf7,
	0x8a, 0xa2, 0xd9, 0xb6, 0xb8, 0x89, 0x27, 0x70, 0xb4, 0x08, 0xb5, 0x65, 0x9d, 0x4e, 0xb4, 0x95,
	0x4f, 0xb4, 0xdc, 0xb2, 0x8d, 0x4d, 0x40, 0x1e, 0xc8, 0x1a, 0x76, 0x70, 0x0f, 0x76, 0xd3, 0xba,
	0xee, 0x88, 0xbb, 0x28, 0xc2, 0x1e, 0x1d, 0x75, 0x34, 0xc7, 0x6d, 0xeb, 0x5d, 0x4d, 0xac, 0xe1,
	0x67, 0x70, 0x4e, 0x2b, 0xaa, 0xf9, 0xad, 0xd1, 0x35, 0x65, 0x95, 0x09, 0x90, 0x7b, 0xc5, 0xa1,
	0x6e, 0x29, 0xa5, 0x98, 0x02, 0xf0, 0x12, 0x3e, 0x7d, 0x3f, 0x35, 0x9b, 0xb4, 0x7e, 0xf5, 0xb7,
	0xf0, 0x2f, 0xd7, 0x1b, 0x3e, 0x87, 0x96, 0xd5, 0x95, 0x9d, 0xb6, 0x49, 0xee, 0x5c, 0xb9, 0x4b,
	0x34, 0x59, 0x7d, 0xb3, 0x90, 0x6d, 0x0b, 0x9a, 0x05, 0xbe, 0x98, 0xbb, 0x80, 0x17, 0x20, 0x95,
	0xbd, 0xc4, 0xd1, 0xdb, 0xb2, 0xe2, 0x94, 0x6e, 0x72, 0x9f, 0x15, 0x3c, 0x87, 0x4f, 0xde, 0xc3,
	0xcb, 0x4c, 0x56, 0xf1, 0x63, 0x78, 0x56, 0xd0, 0x54, 0xcd, 0xea, 0x9a, 0x6f, 0xee, 0x34, 0xc3,
	0xe1, 0x76, 0x81, 0xf7, 0xca, 0x11, 0x8a, 0xbd, 0xa0, 0xe7, 0x20, 0xc7, 0x59, 0xbe, 0xdb, 0x57,
	0x5f, 0xc1, 0x4e, 0x76, 0xe1, 0xe1, 0x0e, 0x54, 0xc9, 0xbd, 0x21, 0x6e, 0x20, 0xc0, 0xb6, 0x62,
	0x1a, 0x6d, 0xbd, 0x23, 0x0a, 0x78, 0x00, 0xa0, 0x74, 0x4d, 0x5b, 0x73, 0x15, 0xd3, 0x30, 0xc4,
	0x0a, 0xee, 0xc2, 0xa6, 0x6e, 0xb4, 0x4d, 0xb1, 0x7a, 0xf5, 0xab, 0x00, 0x75, 0xee, 0xce, 0xc1,
	0x23, 0x10, 0x75, 0xdb, 0x5d, 0x3c, 0x67, 0x1b, 0x78, 0x08, 0xf5, 0x7c, 0x87, 0xad, 0xd7, 0x54,
	0xf0, 0x14, 0x8e, 0xb9, 0x82, 0xdb, 0x26, 0xe6, 0x5d, 0xba, 0xb3, 0x15, 0x7c, 0x02, 0x87, 0x99,
	0x82, 0x79, 0xef, 0xa8, 0xb2, 0xc3, 0x16, 0xdd, 0x80, 0xfd, 0xf2, 0x54, 0x51, 0x89, 0x4d, 0x7a,
	0x26, 0xe8, 0x79, 0x30, 0xb4, 0xef, 0x1c, 0x56, 0xd9, 0xba, 0xfa, 0x1e, 0xea, 0xdc, 0x57, 0xcf,
	0xe6, 0xb0, 0x5d, 0x6e, 0xa9, 0xa5, 0x9f, 0xe7, 0xd0, 0x2a, 0x82, 0x5d, 0xc9, 0x5c, 0x14, 0xa8,
	0x87, 0x34, 0xb9, 0x02, 0x15, 0x2b, 0xb7, 0xbf, 0x0b, 0x50, 0xb5, 0x42, 0x0b, 0x5f, 0x42, 0xbd,
	0x13, 0x4c, 0x2d, 0xcf, 0x1f, 0x7a, 0xfd, 0x60, 0x82, 0x8d, 0x95, 0x47, 0xb9, 0xd5, 0x4c, 0x6f,
	0xa0, 0xe5, 0x67, 0x40, 0xda, 0xb8, 0x14, 0x3e, 0x17, 0xd0, 0xa4, 0x2f, 0xde, 0xa0, 0x38, 0x62,
	0x6a, 0x10, 0x8f, 0xa2, 0x39, 0x36, 0xd7, 0x3f, 0x9d, 0xad, 0x67, 0xbc, 0xd6, 0xd2, 0x75, 0x9a,
	0x0a, 0xbe, 0xdd, 0x66, 0x7f, 0xc4, 0xbe, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xaf, 0xeb,
	0xba, 0xcd, 0x09, 0x00, 0x00,
}
